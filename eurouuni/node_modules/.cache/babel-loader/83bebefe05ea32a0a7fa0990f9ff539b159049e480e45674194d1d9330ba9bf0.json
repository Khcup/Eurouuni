{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauri\\\\OneDrive\\\\Tiedostot\\\\GitHub\\\\Eurouuni\\\\eurouuni\\\\src\\\\Admin\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport \"../App.css\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isFormFilled, setIsFormFilled] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Sign in user with email and password\n      await firebase.auth().signInWithEmailAndPassword(username, password);\n      alert(\"Login successful!\");\n      onLogin(); // Notify parent component about successful login\n      setLoggedIn(true); // Set loggedIn state to true\n    } catch (error) {\n      alert(\"Invalid username or password\");\n      console.error(error.message);\n    }\n  };\n\n  // Function to handle input changes and update state accordingly\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"username\") setUsername(value);\n    if (name === \"password\") setPassword(value);\n  };\n\n  // Function to check if form fields are filled\n  const checkFormFilled = () => {\n    if (username.trim() !== \"\" && password.trim() !== \"\") {\n      setIsFormFilled(true);\n    } else {\n      setIsFormFilled(false);\n    }\n  };\n\n  // Redirect to admin page if logged in\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: e => {\n          handleInputChange(e);\n          checkFormFilled();\n        },\n        placeholder: \"Username\",\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => {\n          handleInputChange(e);\n          checkFormFilled();\n        },\n        placeholder: \"Password\",\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        disabled: !isFormFilled,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"/LOUMaKm9q/bcUBWGrLnJrDaZtQ=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Navigate","firebase","firebaseConfig","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","username","setUsername","password","setPassword","isFormFilled","setIsFormFilled","loggedIn","setLoggedIn","apps","length","initializeApp","handleSubmit","e","preventDefault","auth","signInWithEmailAndPassword","alert","error","console","message","handleInputChange","name","value","target","checkFormFilled","trim","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","type","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lauri/OneDrive/Tiedostot/GitHub/Eurouuni/eurouuni/src/Admin/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport \"../App.css\";\r\nimport firebaseConfig from \"../firebaseConfig\";\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isFormFilled, setIsFormFilled] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  }\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Sign in user with email and password\r\n      await firebase.auth().signInWithEmailAndPassword(username, password);\r\n      alert(\"Login successful!\");\r\n      onLogin(); // Notify parent component about successful login\r\n      setLoggedIn(true); // Set loggedIn state to true\r\n    } catch (error) {\r\n      alert(\"Invalid username or password\");\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  // Function to handle input changes and update state accordingly\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"username\") setUsername(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  // Function to check if form fields are filled\r\n  const checkFormFilled = () => {\r\n    if (username.trim() !== \"\" && password.trim() !== \"\") {\r\n      setIsFormFilled(true);\r\n    } else {\r\n      setIsFormFilled(false);\r\n    }\r\n  };\r\n\r\n  // Redirect to admin page if logged in\r\n  if (loggedIn) {\r\n    return <Navigate to=\"/admin\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2 className=\"login-title\">Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n            checkFormFilled();\r\n          }}\r\n          placeholder=\"Username\"\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n            checkFormFilled();\r\n          }}\r\n          placeholder=\"Password\"\r\n          className=\"login-input\"\r\n        />\r\n        <button type=\"submit\" className=\"login-button\" disabled={!isFormFilled}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}